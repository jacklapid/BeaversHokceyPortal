@model BeaversHockeyPortal.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", new { token = Request.QueryString["token"] }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    if (ViewData["Message"] != null)
    {
        <div class="row text-success" style="margin-bottom:10px">@ViewData["Message"]</div>
    }
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RoleId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 jack">
            @Html.DropDownListFor(m => m.RoleId, Model.AvailableRoles,
    new { @class = "form-control role-selector", onchange = "onRoleChanged(this);" })
        </div>
    </div>

    <div class="form-group player-only" style="display:none">
        @Html.LabelFor(m => m.Position, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.Position, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group player-only" style="display:none">
        @Html.LabelFor(m => m.Status, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.Status, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group player-only" style="display:none">
        @Html.LabelFor(m => m.ManagerId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ManagerId, Model.AvailableManagers, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group player-only" style="display:none">
        @Html.LabelFor(m => m.TeamId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.TeamId, Model.AvailableTeams, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register"
                   @{ if (ViewData["CanRegister"] == null || !(bool)ViewData["CanRegister"]) {  <text> disabled="disabled" </text>} }/>
        </div>
    </div>
                }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/JavaScript">

        $(document).ready(function () {
            var optionList = $('.role-selector');

            onRoleChanged(optionList);
        });

        function onRoleChanged(optionList) {
            var $list = $(optionList);

            var isPlayer = $list.find("option:selected").text() == 'Player';
            if (isPlayer) {
                $('.player-only').show();
            }
            else {
                $('.player-only').hide();
            }
        };

    </script>
}
